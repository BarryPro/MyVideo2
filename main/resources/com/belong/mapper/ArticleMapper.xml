<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.belong.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.belong.model.Article" >
    <id column="Aid" property="aid" jdbcType="INTEGER" />
    <result column="Uid" property="uid" jdbcType="INTEGER" />
    <result column="Arootid" property="arootid" jdbcType="INTEGER" />
    <result column="Adate" property="adate" jdbcType="TIMESTAMP" />
    <result column="Vid" property="vid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.belong.model.Article" extends="BaseResultMap" >
    <result column="Acontent" property="acontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Aid, Uid, Arootid, Adate, Vid
  </sql>
  <sql id="Blob_Column_List" >
    Acontent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.belong.model.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.belong.model.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where Aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where Aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.belong.model.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.belong.model.Article" >
    insert into article (Aid, Uid, Arootid, 
      Adate, Vid, Acontent
      )
    values (#{aid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{arootid,jdbcType=INTEGER}, 
      #{adate,jdbcType=TIMESTAMP}, #{vid,jdbcType=INTEGER}, #{acontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.belong.model.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        Aid,
      </if>
      <if test="uid != null" >
        Uid,
      </if>
      <if test="arootid != null" >
        Arootid,
      </if>
      <if test="adate != null" >
        Adate,
      </if>
      <if test="vid != null" >
        Vid,
      </if>
      <if test="acontent != null" >
        Acontent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="arootid != null" >
        #{arootid,jdbcType=INTEGER},
      </if>
      <if test="adate != null" >
        #{adate,jdbcType=TIMESTAMP},
      </if>
      <if test="vid != null" >
        #{vid,jdbcType=INTEGER},
      </if>
      <if test="acontent != null" >
        #{acontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.belong.model.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.aid != null" >
        Aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        Uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.arootid != null" >
        Arootid = #{record.arootid,jdbcType=INTEGER},
      </if>
      <if test="record.adate != null" >
        Adate = #{record.adate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vid != null" >
        Vid = #{record.vid,jdbcType=INTEGER},
      </if>
      <if test="record.acontent != null" >
        Acontent = #{record.acontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set Aid = #{record.aid,jdbcType=INTEGER},
      Uid = #{record.uid,jdbcType=INTEGER},
      Arootid = #{record.arootid,jdbcType=INTEGER},
      Adate = #{record.adate,jdbcType=TIMESTAMP},
      Vid = #{record.vid,jdbcType=INTEGER},
      Acontent = #{record.acontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set Aid = #{record.aid,jdbcType=INTEGER},
      Uid = #{record.uid,jdbcType=INTEGER},
      Arootid = #{record.arootid,jdbcType=INTEGER},
      Adate = #{record.adate,jdbcType=TIMESTAMP},
      Vid = #{record.vid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.belong.model.Article" >
    update article
    <set >
      <if test="uid != null" >
        Uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="arootid != null" >
        Arootid = #{arootid,jdbcType=INTEGER},
      </if>
      <if test="adate != null" >
        Adate = #{adate,jdbcType=TIMESTAMP},
      </if>
      <if test="vid != null" >
        Vid = #{vid,jdbcType=INTEGER},
      </if>
      <if test="acontent != null" >
        Acontent = #{acontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.belong.model.Article" >
    update article
    set Uid = #{uid,jdbcType=INTEGER},
      Arootid = #{arootid,jdbcType=INTEGER},
      Adate = #{adate,jdbcType=TIMESTAMP},
      Vid = #{vid,jdbcType=INTEGER},
      Acontent = #{acontent,jdbcType=LONGVARCHAR}
    where Aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.belong.model.Article" >
    update article
    set Uid = #{uid,jdbcType=INTEGER},
      Arootid = #{arootid,jdbcType=INTEGER},
      Adate = #{adate,jdbcType=TIMESTAMP},
      Vid = #{vid,jdbcType=INTEGER}
    where Aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>